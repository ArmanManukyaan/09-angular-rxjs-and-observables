{"ast":null,"code":"import { filter, from, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./unsubscribe/unsubscribe.component\";\nconst _c0 = [\"createBtn\"];\nclass AppComponent {\n  constructor() {\n    this.title = 'angular-observables';\n    this.data = [];\n    this.array1 = [1, 3, 5, 7, 9];\n    this.array2 = ['A', 'B', 'C', 'D'];\n    // from Observable\n    this.promiseData = new Promise((resolve, reject) => {\n      resolve([10, 20, 30, 40, 50, 60, 12]);\n    });\n    // myObservable = of(this.array1, this.array2, 20, 30, 'Hello', true);\n    this.myObservable = from([2, 4, 6, 8, 10]);\n    this.transformObs = this.myObservable.pipe(map(val => {\n      return val * 5;\n    }), filter(val => {\n      return val % 4 === 0;\n    }));\n  }\n  // filteredObs = this.transformObs.pipe(filter((val: number) => {\n  //     return val % 4 === 0;\n  // }));\n  // Observable\n  // myObservable = new Observable((observer) => {\n  //     setTimeout(() => {\n  //         (observer.next(1))\n  //     }, 1000);\n  //     setTimeout(() => {\n  //         (observer.next(2))\n  //     }, 2000);\n  //     setTimeout(() => {\n  //         (observer.next(3))\n  //     }, 3000);\n  //     // setTimeout(() => {\n  //     //     (observer.error(new Error('Something went wrong. Please try again later! ')))\n  //     // }, 3000);\n  //     setTimeout(() => {\n  //         (observer.next(4))\n  //     }, 4000);\n  //     setTimeout(() => {\n  //         (observer.next(5))\n  //     }, 5000);\n  //     setTimeout(() => {\n  //         (observer.next(6))\n  //     }, 6000);\n  //     setTimeout(() => {\n  //         (observer.complete())\n  //     }, 6000);\n  // });\n  GetAsyncData() {\n    // this.myObservable.subscribe((val: any) => {\n    //         this.data.push(val);\n    //     },\n    //     (error) => {\n    //         alert(error.message)\n    //     },\n    //     () => {\n    //         alert(\"All the data is streamed!\")\n    //     });\n    this.transformObs.subscribe({\n      next: val => {\n        this.data.push(val);\n        console.log(val);\n      },\n      error(err) {\n        alert(err.message);\n      },\n      complete() {\n        alert(\"All the data is streamed!\");\n      }\n    });\n  }\n  // fromEvent Observable\n  // buttonClicked() {\n  //     let count = 0;\n  //     this.createBtnObservable = fromEvent(this.createBtn.nativeElement, 'click')\n  //         .subscribe((data) => {\n  //             console.log(data);\n  //             // this.showItem(++count);\n  //         });\n  // }\n  ngAfterViewInit() {\n    // this.buttonClicked();\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.createBtn = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-unsubscribe\");\n      }\n    },\n    dependencies: [i1.UnsubscribeComponent],\n    styles: [\"h2[_ngcontent-%COMP%], button[_ngcontent-%COMP%]{\\n    margin: 10px 0px;\\n}\\n\\n.container[_ngcontent-%COMP%]{\\n    padding: 60px 200px;\\n    font-family: 'Lucida Sans';\\n}\\n\\n.data-list[_ngcontent-%COMP%]{\\n    padding: 15px 50px;\\n    \\n\\n    margin: 5px 0px;\\n    border-radius: 5px;\\n    font-weight: bold;\\n    background-color: #efefef;\\n}\\n\\nbutton[_ngcontent-%COMP%]{\\n    padding: 15px 30px;\\n    font-weight: bold;\\n    border: none;\\n    background-color: #EE3915;\\n    color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQiwyREFBMkQ7SUFDM0QsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaDIsIGJ1dHRvbntcclxuICAgIG1hcmdpbjogMTBweCAwcHg7XHJcbn1cclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiA2MHB4IDIwMHB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdMdWNpZGEgU2Fucyc7XHJcbn1cclxuXHJcbi5kYXRhLWxpc3R7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDUwcHg7XHJcbiAgICAvKiBib3gtc2hhZG93OiByZ2JhKDEwMCwgMTAwLCAxMTEsIDAuMikgMHB4IDdweCAyOXB4IDBweDsgKi9cclxuICAgIG1hcmdpbjogNXB4IDBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VmZWZlZjtcclxufVxyXG5cclxuYnV0dG9ue1xyXG4gICAgcGFkZGluZzogMTVweCAzMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUUzOTE1O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { AppComponent };","map":{"version":3,"names":["filter","from","map","AppComponent","constructor","title","data","array1","array2","promiseData","Promise","resolve","reject","myObservable","transformObs","pipe","val","GetAsyncData","subscribe","next","push","console","log","error","err","alert","message","complete","ngAfterViewInit","_","_2","selectors","viewQuery","AppComponent_Query","rf","ctx","i0","ɵɵelement"],"sources":["C:\\09-angular-rxjs-and-observables\\src\\app\\app.component.ts","C:\\09-angular-rxjs-and-observables\\src\\app\\app.component.html"],"sourcesContent":["import {AfterViewInit, Component, ElementRef, ViewChild} from '@angular/core';\nimport {filter, from, map} from \"rxjs\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n    title = 'angular-observables';\n    data: any[] = [];\n    array1 = [1, 3, 5, 7, 9];\n    array2 = ['A', 'B', 'C', 'D'];\n\n    // fromEvent Observable\n    @ViewChild(\"createBtn\")\n    createBtn: ElementRef;\n\n    createBtnObservable;\n\n    // from Observable\n    promiseData = new Promise((resolve, reject) => {\n        resolve([10, 20, 30, 40, 50, 60, 12]);\n    });\n\n    // myObservable = of(this.array1, this.array2, 20, 30, 'Hello', true);\n\n    myObservable = from([2, 4, 6, 8, 10]);\n    transformObs = this.myObservable.pipe(map((val) => {\n        return val * 5;\n    }), filter((val: number) => {\n        return val % 4 === 0;\n    }));\n\n\n    // filteredObs = this.transformObs.pipe(filter((val: number) => {\n    //     return val % 4 === 0;\n    // }));\n\n    // Observable\n    // myObservable = new Observable((observer) => {\n    //     setTimeout(() => {\n    //         (observer.next(1))\n    //     }, 1000);\n    //     setTimeout(() => {\n    //         (observer.next(2))\n    //     }, 2000);\n    //     setTimeout(() => {\n    //         (observer.next(3))\n    //     }, 3000);\n    //     // setTimeout(() => {\n    //     //     (observer.error(new Error('Something went wrong. Please try again later! ')))\n    //     // }, 3000);\n    //     setTimeout(() => {\n    //         (observer.next(4))\n    //     }, 4000);\n    //     setTimeout(() => {\n    //         (observer.next(5))\n    //     }, 5000);\n    //     setTimeout(() => {\n    //         (observer.next(6))\n    //     }, 6000);\n    //     setTimeout(() => {\n    //         (observer.complete())\n    //     }, 6000);\n    // });\n\n    GetAsyncData() {\n        // this.myObservable.subscribe((val: any) => {\n        //         this.data.push(val);\n        //     },\n        //     (error) => {\n        //         alert(error.message)\n        //     },\n        //     () => {\n        //         alert(\"All the data is streamed!\")\n        //     });\n\n        this\n            .transformObs\n            .subscribe({\n                next:\n\n                    (\n                        val: any\n                    ) => {\n                        this\n                            .data\n                            .push(val);\n\n                        console\n                            .log(val);\n                    }\n\n                ,\n                error(err) {\n                    alert(err.message)\n                }\n                ,\n                complete() {\n                    alert(\"All the data is streamed!\");\n                }\n            })\n        ;\n    }\n\n\n// fromEvent Observable\n// buttonClicked() {\n//     let count = 0;\n//     this.createBtnObservable = fromEvent(this.createBtn.nativeElement, 'click')\n//         .subscribe((data) => {\n//             console.log(data);\n//             // this.showItem(++count);\n//         });\n// }\n\n    ngAfterViewInit() {\n        // this.buttonClicked();\n    }\n\n// showItem(val: number) {\n//     let div = document.createElement('div');\n//     div.innerText = 'Item' + val;\n//     div.className = 'data-list';\n//     document.getElementById('container').appendChild(div);\n// }\n\n}\n","<!--<div class=\"container\">-->\n<!--    <h2>Observables in Angular</h2>-->\n<!--    <div class=\"data-list\" *ngFor=\"let x of data\">-->\n<!--        {{ x }}-->\n<!--    </div>-->\n<!--    <button (click)=\"GetAsyncData()\">Get Data</button>-->\n\n\n<!--    &lt;!&ndash;    <div class=\"data-list\" id=\"container\">&ndash;&gt;-->\n<!--    &lt;!&ndash;    </div>&ndash;&gt;-->\n\n<!--    &lt;!&ndash;    <button #createBtn>Create new Item</button>&ndash;&gt;-->\n<!--</div>-->\n<!--<app-new-task></app-new-task>-->\n<!--<app-show-task></app-show-task>-->\n<!--<app-subject></app-subject>-->\n<app-unsubscribe></app-unsubscribe>"],"mappings":"AACA,SAAQA,MAAM,EAAEC,IAAI,EAAEC,GAAG,QAAO,MAAM;;;;AAEtC,MAKaC,YAAY;EALzBC,YAAA;IAMI,KAAAC,KAAK,GAAG,qBAAqB;IAC7B,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxB,KAAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAQ7B;IACA,KAAAC,WAAW,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MAC1CD,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF;IAEA,KAAAE,YAAY,GAAGZ,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACrC,KAAAa,YAAY,GAAG,IAAI,CAACD,YAAY,CAACE,IAAI,CAACb,GAAG,CAAEc,GAAG,IAAI;MAC9C,OAAOA,GAAG,GAAG,CAAC;IAClB,CAAC,CAAC,EAAEhB,MAAM,CAAEgB,GAAW,IAAI;MACvB,OAAOA,GAAG,GAAG,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,CAAC;;EAGH;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,YAAYA,CAAA;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CACCH,YAAY,CACZI,SAAS,CAAC;MACPC,IAAI,EAGIH,GAAQ,IACR;QACA,IAAI,CACCV,IAAI,CACJc,IAAI,CAACJ,GAAG,CAAC;QAEdK,OAAO,CACFC,GAAG,CAACN,GAAG,CAAC;MACjB,CAAC;MAGLO,KAAKA,CAACC,GAAG;QACLC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;MACtB,CAAC;MAEDC,QAAQA,CAAA;QACJF,KAAK,CAAC,2BAA2B,CAAC;MACtC;KACH,CAAC;EAEV;EAGJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEIG,eAAeA,CAAA;IACX;EAAA;EACH,QAAAC,CAAA,G;qBA/GQ1B,YAAY;EAAA;EAAA,QAAA2B,EAAA,G;UAAZ3B,YAAY;IAAA4B,SAAA;IAAAC,SAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;QCQzBE,EAAA,CAAAC,SAAA,sBAAmC;;;;;;;SDRtBlC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}